#!/bin/sh

default=${LINUXDIR:=/usr/src/linux}
if [ "${interactive}" = "y" ];then
	echo -n "Enter location of Linux source tree [$default]: "
	read LINUXDIR
fi
: ${LINUXDIR:=$default}

if [ ! -f "$LINUXDIR/.config" ];then
	echo Kernel source tree at $LINUXDIR is not configured
	echo Fix before continuing
	exit 1
fi

echo using LINUXDIR=$LINUXDIR

export LINUXDIR

. $LINUXDIR/.config

#
# check for a bad situation
#
if [ "$CONFIG_MODULES" = "n" ]
then
	cat <<EOF
 *****
 *****    WARNING!!!
 *****
 *****    Your kernel is configured to not allow loadable modules.
 *****    You are attempting to compile a loadable module for this
 *****    kernel.  This is a problem.  Please correct it.
 *****
EOF
exit
fi

#
# check running kernel vs. /usr/src/linux and warn if necessary
#
UTS_VERSION=$(grep UTS_RELEASE ${LINUXDIR}/include/linux/version.h| \
	sed 's/[^"]*"\(.*\)\{1\}"/\1/')

echo "Kernel source version is ${UTS_VERSION}"

UNAME=$(uname -r)

if [ "${UNAME}" != "${UTS_VERSION}" ]
then
	cat <<EOF
 ***
 ***    WARNING!!!
 ***
 ***    The kernel that is currently running ($UNAME)
 ***    appears to be a different version than the source in
 ***    $LINUXDIR ($UTS_VERSION).
 ***    If so, the current compile will create a module that is
 ***    INCOMPATIBLE with the running kernel.  (This could be
 ***    what you want, however.)
 ***
EOF
fi

topdir=${PWD}

cd ${topdir}/scripts/linux_flags
make LINUXDIR=${LINUXDIR} &>/dev/null
cd ${topdir}
mv scripts/linux_flags/flags .buildvars


if [ "$(echo ${UTS_VERSION} | grep '^2.[45]')" != "" ];then
	echo "FLAT_MODULES := no" >>.buildvars
else
	echo "FLAT_MODULES := yes" >>.buildvars
fi


